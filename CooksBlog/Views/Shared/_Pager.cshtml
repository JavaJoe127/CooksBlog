@model CooksBlog.Models.ListViewModel

@{ 
    var currentPage = ViewContext.RequestContext.HttpContext.Request["p"] != null
         ? int.Parse(ViewContext.RequestContext.HttpContext.Request["p"])
         : 1;
    var totalPages = Math.Ceiling((double)Model.TotalPosts / 10);
}

@if (currentPage > 1 || currentPage < totalPages)
{
    var prev = string.Format("p={0}", currentPage - 1);
    var next = string.Format("p={0}", currentPage + 1);

    if (ViewContext.RouteData.Values["action"].ToString()
        .Equals("search", StringComparison.OrdinalIgnoreCase))
    {
        var search = string.Format("?s={0}", ViewContext.RequestContext.HttpContext.Request.QueryString["s"]);
        prev = string.Format("{0}&{1}", search, prev);
        next = string.Format("{0}&{1}", search, next);
    }
    else
    {
        prev = string.Concat("?", prev);
        next = string.Concat("?", next);
    }

    <!--pagination links-->
    <div class="pager">
        <a href="@prev" title="Previous" class="previous"
           style="visibility:@(currentPage > 1 ? "visible" : "collapse")"><< previous</a>
        <a href="@next" title="Next" class="next"
           style="visibility:@(currentPage < totalPages ? "visible" : "collapse")">next >></a>
    </div>
}
